name: Build


on:
  pull_request:

jobs:
    dependencies:
        name: Build dependencies
        runs-on: ubuntu-latest
        outputs:
            version: ${{ steps.version.outputs.version }}

        steps:
            - name: Check out source files
              uses: actions/checkout@v3

            - name: Create global variables
              id: version
              run: echo "version=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

    determine-matrix:
      name: Figure out the packages we need to build
      runs-on: ubuntu-latest

      outputs:
        matrix: ${{ steps.set-matrix.outputs.matrix }}

      steps:
        - name: Set up Git repository
          uses: actions/checkout@v3

        - name: Install the Nix package manager
          uses: cachix/install-nix-action@v20

        - uses: cachix/cachix-action@v12
          with:
            name: typst-document
            authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

        - name: Build typst bleeding edge
          run: |
            nix build github:typst/typst

        - id: set-matrix
          run: |
            echo "matrix=$(
              nix eval --json --impure --expr 'builtins.attrNames (import ./.).packages.x86_64-linux'
            )" >> $GITHUB_OUTPUT

    build-typst-dev:
      name: Build and cache typst binary
      runs-on: ubuntu-latest

      steps:
        - name: Install Nix
          uses: cachix/install-nix-action@v20

        - uses: cachix/cachix-action@v12
          with:
            name: typst-document
            authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

        - name: Build typst bleeding edge
          run: |
            nix build github:typst/typst

    build:
        name: Build PDF document
        runs-on: ubuntu-latest
        needs: [dependencies, determine-matrix, build-cache-typst]
        strategy:
          fail-fast: false
          matrix:
            packages: ${{fromJson(needs.determine-matrix.outputs.matrix)}}

        steps:
            - name: Set git to use LF
              run: |
                git config --global core.autocrlf false
                git config --global core.eol lf

            - name: Check out source files
              uses: actions/checkout@v3

            - name: Install Nix
              uses: cachix/install-nix-action@v20

            - uses: cachix/cachix-action@v12
              with:
                name: typst-document
                authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

            - name: Build ${{ matrix.packages }}
              run: |
                nix build .#${{ matrix.packages }}
                cp result/${{ matrix.packages }}.pdf ${{ matrix.packages }}.pdf

            - name: Upload build assets
              uses: actions/upload-artifact@v3
              with:
                name: assets
                path: "*.pdf"
